server.port=8080
server.servlet.context-path=/unilumin/services
# 数据库一配置
spring.datasource.druid.master.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.master.driverClassName=com.taosdata.jdbc.TSDBDriver
spring.datasource.druid.master.url=jdbc:TAOS://127.0.0.1:6030/log
spring.datasource.druid.master.username=root
spring.datasource.druid.master.password=taosdata
# druid连接池配置
spring.datasource.druid.master.initial-size=5
spring.datasource.druid.master.min-idle=5
spring.datasource.druid.master.max-active=5
spring.datasource.druid.master.max-wait=60000
spring.datasource.druid.master.validation-query=select server_status();
spring.datasource.druid.master.validation-query-timeout=5000
spring.datasource.druid.master.test-on-borrow=false
spring.datasource.druid.master.test-on-return=false
spring.datasource.druid.master.test-while-idle=true
spring.datasource.druid.master.time-between-eviction-runs-millis=60000
spring.datasource.druid.master.min-evictable-idle-time-millis=600000
spring.datasource.druid.master.max-evictable-idle-time-millis=900000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，log4j2为你自己使用的日志，如果是log4j就写log4j,我这里用的log4j2
spring.datasource.druid.master.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.master.connectionProperties=druid.stat.mergeSql=true

#数据库二配置
spring.datasource.druid.slave.type=com.alibaba.druid.spool.DruidDataSource
spring.datasource.druid.slave.driverClassName=com.mysql.jdbc.Driver
spring.datasource.druid.slave.url=jdbc:mysql://localhost:3386/fcdb?useSSL=false&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=UTC   //根据自己需要修改第二个jdbc链接
spring.datasource.druid.slave.username=root
spring.datasource.druid.slave.password=root
##########################  druid配置   ##########################
# 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
##################    连接池配置    ################
#连接池建立时创建的初始化连接数
spring.datasource.druid.slave.initial-size=5
#连接池中最大的活跃连接数
spring.datasource.druid.slave.max-active=20
#连接池中最小的活跃连接数
spring.datasource.druid.slave.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.slave.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.slave.pool-prepared-statements=true
spring.datasource.druid.slave.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #和上面的等价
spring.datasource.druid.slave.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.slave.validation-query-timeout=30000
#是否在获得连接后检测其可用性
spring.datasource.druid.slave.test-on-borrow=false
#是否在连接放回连接池后检测其可用性
spring.datasource.druid.slave.test-on-return=false
#是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.slave.test-while-idle=true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.slave.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.slave.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
# log
logging.level.com.unilumin.fc.iot.mapper=debug
# emqx配置
mqtt.host= tcp://127.0.0.1:11883
mqtt.username= admin
mqtt.password= public

## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=12345
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=0

#HTTP 连接请求
http_pool.max_total=200
http_pool.default_max_per_route=100
http_pool.connect_timeout=5000
http_pool.connection_request_timeout=1000
http_pool.socket_timeout=65000
http_pool.validate_after_inactivity=2000